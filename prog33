Minimum bracket Reversal
Send Feedback
Given a string expression which consists only ‘}’ and ‘{‘. The expression may not be balanced. You need to find the minimum number of bracket reversals which are required to make the expression balanced.
Return -1 if the given expression can't be balanced.
Input Format :
String S
Output Format :
Required count
Sample Input 1 :
{{{
Sample Output 1 :
-1
Sample Input 2 :
{{{{}}
Sample Output 2 :
1
#include <string.h>
#include <stack>
int countBracketReversals(char input[]){
    // Write your code here
    stack<char> s;
    int c = 0;    
    int n = strlen(input);
    if(n==0)
        return 0;    
    if(n%2==0)    
    {

        for(int i =0;i<n;i++)    
        {

            if(input[i]=='{')    
                s.push(input[i]);    
            else if(input[i]=='}')    
            {
                if(!s.empty() && s.top() == '{')
                    s.pop();    


                else if(!s.empty() && s.top() != '{')    
                    s.push(input[i]);    



            }    



        }    

        while(!s.empty())    
        {
            int c1;
            int c2;    
            if(!s.empty()) {   
                c1 = s.top();    
                s.pop();  
            }
            if(!s.empty()) {   
                c2 = s.top();    
                s.pop();
            }    
            if(c1==c2)    
                c+=1;    
            else    
                c+=2;    


        }    

        return c;    

    }    

    else
        return -1;    




}
